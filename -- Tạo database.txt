-- 1. Tạo database
CREATE DATABASE IF NOT EXISTS quan_ly_vat_tu;
USE quan_ly_vat_tu;


-- 2. Roles & Users
CREATE TABLE Roles (
    role_id INT AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL UNIQUE
);


CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    full_name VARCHAR(100) NOT NULL,
    address VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20),
    imageUrl VARCHAR(255) NOT NULL,
    date_of_birth DATE,
    status ENUM('active', 'inactive') DEFAULT 'active'
);


CREATE TABLE UserRoles (
    user_id INT,
    role_id INT,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES Roles(role_id) ON DELETE CASCADE
);


-- 3. Permissions
CREATE TABLE Permissions (
    permission_id INT AUTO_INCREMENT PRIMARY KEY,
    permission_key VARCHAR(100) NOT NULL UNIQUE
);


-- Bảng RolePermissions 
CREATE TABLE RolePermissions (
    role_id INT,
    permission_id INT,
    PRIMARY KEY (role_id, permission_id),
    FOREIGN KEY (role_id) REFERENCES Roles(role_id) ON DELETE CASCADE,
    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id) ON DELETE CASCADE
);


-- 4. Nhà cung cấp
CREATE TABLE Suppliers (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    phone VARCHAR(20),
    address TEXT,
    email VARCHAR(100),
    status ENUM('active', 'inactive') DEFAULT 'active'
);


-- 5. Phân cấp vật tư (3 cấp)
CREATE TABLE MaterialCategories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);


CREATE TABLE MaterialBrands (
    brand_id INT AUTO_INCREMENT PRIMARY KEY,
    category_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    FOREIGN KEY (category_id) REFERENCES  MaterialCategories(category_id)
);


CREATE TABLE Materials (
    material_id INT AUTO_INCREMENT PRIMARY KEY,
    brand_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,       
    description TEXT,                   
    unit VARCHAR(20) NOT NULL,          
    image_url VARCHAR(255),            
    FOREIGN KEY (brand_id) REFERENCES MaterialBrands(brand_id)
);




CREATE TABLE SupplierMaterials (
    supplier_id INT,
    material_id INT,
    PRIMARY KEY (supplier_id, material_id),
    FOREIGN KEY (supplier_id) REFERENCES Suppliers(supplier_id) ON DELETE CASCADE,
    FOREIGN KEY (material_id) REFERENCES Materials(material_id) ON DELETE CASCADE
);




-- Bảng ImportReceipts (phiếu nhập kho)
CREATE TABLE ImportReceipts (
    import_id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_id INT,
    user_id INT,
    import_date DATE NOT NULL,
    note TEXT,
    FOREIGN KEY (supplier_id) REFERENCES Suppliers(supplier_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);


-- Bảng ImportDetails (chi tiết phiếu nhập)
CREATE TABLE ImportDetails (
    import_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    import_id INT,
    material_id INT,
    quantity DECIMAL(10,2) NOT NULL,
    price_per_unit DECIMAL(15,2) NOT NULL,
    FOREIGN KEY (import_id) REFERENCES ImportReceipts(import_id),
    FOREIGN KEY (material_id) REFERENCES Materials(material_id)
);


-- Bảng ExportReceipts (phiếu xuất kho)
CREATE TABLE ExportReceipts (
    export_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    export_date DATE NOT NULL,
    note TEXT,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);


-- Bảng ExportDetails (chi tiết phiếu xuất)
CREATE TABLE ExportDetails (
    export_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    export_id INT,
    material_id INT,
    quantity DECIMAL(10,2) NOT NULL,
    reason VARCHAR(255),
    FOREIGN KEY (export_id) REFERENCES ExportReceipts(export_id),
    FOREIGN KEY (material_id) REFERENCES Materials(material_id)
);


-- Bảng Requests (yêu cầu xuất kho, mua mới, sửa chữa)
CREATE TABLE Requests (
    request_id INT AUTO_INCREMENT PRIMARY KEY,
    request_type ENUM('export','purchase','repair') NOT NULL,
    requester_id INT NOT NULL,
    request_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status ENUM('pending','approved','rejected') DEFAULT 'pending',
    approver_id INT,
    approval_date DATETIME,
    reason TEXT,
    note TEXT,
    FOREIGN KEY (requester_id) REFERENCES Users(user_id),
    FOREIGN KEY (approver_id) REFERENCES Users(user_id)
);


-- Bảng RequestDetails (chi tiết yêu cầu)
CREATE TABLE RequestDetails (
    request_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    request_id INT NOT NULL,
    material_id INT NOT NULL,
    quantity DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (request_id) REFERENCES Requests(request_id),
    FOREIGN KEY (material_id) REFERENCES Materials(material_id)
);


-- Bảng InventoryLogs (nhật ký tồn kho)
CREATE TABLE InventoryLogs (
    log_id INT AUTO_INCREMENT PRIMARY KEY,
    material_id INT,
    date DATETIME DEFAULT CURRENT_TIMESTAMP,
    change_type ENUM('import', 'export') NOT NULL,
    quantity DECIMAL(10,2) NOT NULL,
    reference_id INT,
    note TEXT,
    FOREIGN KEY (material_id) REFERENCES Materials(material_id)
);


-- Bảng quản lý chi phí sửa chữa
CREATE TABLE RepairCosts (
    repair_id INT AUTO_INCREMENT PRIMARY KEY,
    material_id INT NOT NULL,
    request_id INT NOT NULL,
    cost DECIMAL(15,2) NOT NULL,
    repair_date DATE NOT NULL,
    note TEXT,
    FOREIGN KEY (material_id) REFERENCES Materials(material_id),
    FOREIGN KEY (request_id) REFERENCES Requests(request_id)
);